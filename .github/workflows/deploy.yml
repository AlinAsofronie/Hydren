name: Deploy to AWS S3 and CloudFront

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build static site
      run: npm run build:static
      env:
        NODE_ENV: production
        ASSET_PREFIX: ${{ secrets.CLOUDFRONT_DOMAIN }}
        BASE_PATH: ${{ secrets.BASE_PATH }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: static-site
        path: out/
        retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: static-site
        path: out/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to S3
      run: |
        aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
        
        # Set content types and cache headers
        aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --recursive --exclude "*" --include "*.html" \
          --metadata-directive REPLACE \
          --content-type "text/html; charset=utf-8" \
          --cache-control "public, max-age=0, must-revalidate"
        
        aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --recursive --exclude "*" --include "*.css" \
          --metadata-directive REPLACE \
          --content-type "text/css" \
          --cache-control "public, max-age=31536000, immutable"
        
        aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
          --recursive --exclude "*" --include "*.js" \
          --metadata-directive REPLACE \
          --content-type "application/javascript" \
          --cache-control "public, max-age=31536000, immutable"

    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"

    - name: Deployment status
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üåê Site URL: https://${{ secrets.CLOUDFRONT_DOMAIN }}"

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'